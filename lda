@Test
void testConvertCsvToParquetAndUpload() throws IOException {
    String sourceBucketName = "source-bucket";
    String sourceFileKey = "source.csv";
    String fileTobeProcessed = "gbi_party";
    String destinationBucketName = "destination-bucket";
    String destinationFileKey = "destination.parquet";

    ResponseInputStream<GetObjectResponse> responseInputStream = mock(ResponseInputStream.class);

    // Simulate valid CSV data being returned
    when(s3Client.getObject(any(GetObjectRequest.class))).thenReturn(responseInputStream);
    when(responseInputStream.readAllBytes()).thenReturn("header1,header2\nvalue1,value2".getBytes());
    when(s3Client.putObject(any(PutObjectRequest.class), any(RequestBody.class))).thenReturn(null);

    // Mock schema loading
    snapshotService = spy(snapshotService);
    doReturn("{\"type\": \"record\", \"name\": \"test\", \"fields\": [{\"name\": \"header1\", \"type\": \"string\"}, {\"name\": \"header2\", \"type\": \"string\"}]}").when(snapshotService).loadJsonSchema(anyString());

    // Call the method and expect no exceptions
    assertDoesNotThrow(() -> snapshotService.convertCsvToParquetAndUpload(sourceBucketName, sourceFileKey, fileTobeProcessed, destinationBucketName, destinationFileKey));

    // Verify interactions
    verify(s3Client).getObject(any(GetObjectRequest.class));
    verify(s3Client).putObject(any(PutObjectRequest.class), any(RequestBody.class));
}

@Test
void testConvertCsvToParquetAndUpload_WithSdkClientException() throws IOException {
    String sourceBucketName = "source-bucket";
    String sourceFileKey = "path/to/source.csv";
    String fileTobeProcessed = "gbi_party";
    String destinationBucketName = "destination-bucket";
    String destinationFileKey = "path/to/destination.parquet";

    // Simulate S3Client exception
    when(s3Client.getObject(any(GetObjectRequest.class))).thenThrow(SdkClientException.class);

    // Call the method and expect IOException
    IOException thrownException = assertThrows(IOException.class, () -> snapshotService.convertCsvToParquetAndUpload(sourceBucketName, sourceFileKey, fileTobeProcessed, destinationBucketName, destinationFileKey));
    assertEquals("Error fetching CSV data from S3", thrownException.getMessage());
}
