@Test
void testConvertCsvToParquetAndUpload_Success() throws IOException {
    String sourceBucketName = "source-bucket";
    String sourceFileKey = "source.csv";
    String fileTobeProcessed = "gbi_party";
    String destinationBucketName = "destination-bucket";
    String destinationFileKey = "destination.parquet";

    ResponseInputStream<GetObjectResponse> responseInputStream = mock(ResponseInputStream.class);
    
    // Mock S3 client behavior
    when(s3Client.getObject(any(GetObjectRequest.class))).thenReturn(responseInputStream);
    when(responseInputStream.readAllBytes()).thenReturn("header1,header2\nvalue1,value2".getBytes());
    when(s3Client.putObject(any(PutObjectRequest.class), any(RequestBody.class))).thenReturn(null);

    // Mock CSV data
    List<String[]> csvData = Arrays.asList(
        new String[]{"header1", "header2"},
        new String[]{"value1", "value2"}
    );

    // Spy on snapshotService and mock readCsvFromS3 method
    snapshotService = spy(snapshotService);
    doReturn(csvData).when(snapshotService).readCsvFromS3(anyString(), anyString());

    // Call the method
    assertDoesNotThrow(() -> snapshotService.convertCsvToParquetAndUpload(sourceBucketName, sourceFileKey, fileTobeProcessed, destinationBucketName, destinationFileKey));

    // Verify interactions
    verify(s3Client).getObject(any(GetObjectRequest.class));
    verify(s3Client).putObject(any(PutObjectRequest.class), any(RequestBody.class));

    // Add logging to confirm
    System.out.println("Test completed successfully. Verifications done.");
}
